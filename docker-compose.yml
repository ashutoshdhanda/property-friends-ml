version: '3.8'

services:
  property-ml-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=False
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    volumes:
      # Mount data directory (exclude from git but needed for container)
      - ./data:/app/data:ro
      # Mount models directory
      - ./models:/app/models
      # Mount logs directory for persistence
      - ./logs:/app/logs
      # Mount environment file
      - ./.env:/app/.env:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a database service for future use
  property-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: property_db
      POSTGRES_USER: property_user
      POSTGRES_PASSWORD: property_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - with-db  # Only start with: docker-compose --profile with-db up

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring  # Only start with: docker-compose --profile monitoring up

volumes:
  postgres_data:
